;;
;;  ANSI COMMON LISP: 12. Numbers
;;

;;
;;  Function SQRT
;;
(deftest sqrt.1
  (sqrt 0)
  0.0f0)

(deftest sqrt.2
  (sqrt (make-bignum 36))
  6.0f0)

(deftest-single sqrt.3
  (sqrt -22)
  0.0f0 4.690416f0)

(deftest-single sqrt.4
  (sqrt 16/25)
  0.8f0)

(deftest-single sqrt.5
  (sqrt 12.3f0)
  3.5071356f0)

(deftest-double sqrt.6
  (sqrt -65.43d0)
  0.0d0 8.088881257627659d0)

(deftest-long sqrt.7
  (sqrt 81.0L0)
  9.0L0)

(deftest-single sqrt.8
  (sqrt #c(5 -6))
  2.530835f0 -1.1853796f0)

(deftest-double sqrt.9
  (sqrt #c(1.2d0 3.4d3))
  41.23833296682044d0 41.22378082954486d0 1.0e-10)

(deftest-error! sqrt-error.1
  (eval '(sqrt)))

(deftest-error! sqrt-error.2
  (eval '(sqrt "Hello"))
  type-error)

(deftest-error! sqrt-error.3
  (eval '(sqrt 10 20)))


;;  Function ISQRT
(deftest isqrt.1
  (isqrt 0)
  0)

(deftest isqrt.2
  (isqrt 1)
  1)

(deftest isqrt.3
  (isqrt 2)
  1)

(deftest isqrt.4
  (isqrt 3)
  1)

(deftest isqrt.5
  (isqrt 4)
  2)

(deftest isqrt.6
  (isqrt 5)
  2)

(deftest isqrt.7
  (isqrt 1023)
  31)

(deftest isqrt.8
  (isqrt 1024)
  32)

(deftest isqrt.9
  (isqrt 1025)
  32)

(deftest isqrt.10
  (isqrt 25)
  5)

(deftest isqrt.11
  (isqrt 26)
  5)

(defconstant +isqrt-test+
  '((4838 69)
    (4002 63)
    (8718 93)
    (81 9)
    (5921 76)
    (7261 85)
    (5041 71)
    (7592 87)
    (8079 89)
    (4707 68)
    (58679204693041144622552608592641451617335059934916188
     242237909281435849793738252)
    (80709256552279406014383226078789232779745873670108913
     284093746063301094298598529)
    (73246930203567248682542754115162736335695148237803285
     270641700784574675792727676)
    (13573386980340494978835847054595327102761858113219247
     116504879641757902546650606)
    (64158383577076603192905261079410921907316548773740549
     253295052413339892289043598)
    (75106285356401131061019129143697706747865537056908999
     274055259676586267595124222)
    (54926535479153171898118470683390659627765871189203913
     234364108769139759460400184)
    (17176799042510421536331542691416823359469451270750582
     131060287816372589928279865)
    (1126946619046527322636961731067719648421331732367479
     33570025603900383719423626)
    (47924664690247299522793554755986922340263370076800741
     218917026953700656003906734)
    (7050040464004754898035172901270367934207913777364188603352609170392187165509779944944997823336598725663648780760244115828214521840575111069737061369029339432960399902753510283085145753853908009
     2655191229272339039306348271486411878585303862642667613898043825108625490981386951819179596978587)
    (5696161373391666752142594072078903502599752690146982851220888962599463379142264056495369912482304982739869904932080211200505442303839912225242900357746100836015854112961514521255463647772960183
     2386663229991124397584680452750903753693573269140273496901681595026731404560360987309891697696142)
    (2101328661230190552176632792290668128579819764133959065075788899967064116203757236424075743433186237583348903645013187061184382595556183041902455952738115756502352264468485550463418829208633360
     1449596033807415793516010721820035108706696011609535454205371572392006299362333720995328954929352)
    (8429574983952309033946758030819377018711102136551701404948914755435667909288556239993538571497677576784461863728892934385210126009506037342191036398032505064929784808863709723439560807124541960
     2903373035617763850067086859262242002220376055125016585907430049233194779202641284440934288048254)
    (9987094699612121973205038965298269552258400050142686437495402286038896687841511468206252333461808804887209721539954279721393236471282875122280773777993876883735225423526546350101552872192119364
     3160236494253574367010765081952338115992712417440932923094885926276652579925472981356927869616588)
    (528394400074352411020367433299902893840752193550921214999123433723215675350626713257702779286866593173079593603558230094121798631462803848001525562820629181402466392782497801929629461537091975
     726907421941991462440317773279036508595132489863316017378066770820027446636702673975786728437916)
    (7625304514333366235987906366674089979820076756026632608461459842193194729863471399029649818445158685768889781583639911471349836956657559664966969529103510189667701262162522412869381224620399486
     2761395392611019447159011121046222560709221006486584278095145649007647945257619213813629099628062)
    (5852687709721324953523138066558833427951734028354625929702377739092785386183877543810616186171138183629218273651205112289317830614587667677794660673773363676522303786276937590170241529576641120
     2419232876289780614208048085030248205891459403951697433698040831783046580499274873112268229215960)
    (7175971158744529348871824948709254860990899657520531924169347183126563146627765000438077397614429000530106676397236257119000860661856447597270618821958962010317674168549642668885564348001555915
     2678800320804917581207384027073079713744488401438729100974963773285858265519998456033592688613595)
    (498047357938803989175155626769873922538146894238620066479511257680977247533199825649741145122886710585542459013841850960976022357711383092724532139011522489546811667534276263206978982325910911
     705724704072915382291788792046534491147856251520848845358790863388540041225561088228855042213112)))

(deftest isqrt.12
  (dolist (x +isqrt-test+ t)
    (destructuring-bind (y z) x
      (unless (eql (isqrt y) z)
        (error "error"))))
  t)

(deftest-error! isqrt-error.1
  (eval '(isqrt)))

(deftest-error! isqrt-error.2
  (eval '(isqrt 10 20)))

(deftest-error isqrt-error.3
  (eval '(isqrt #\A))
  type-error)

(deftest-error isqrt-error.4
  (eval '(isqrt -1))
  type-error)

(deftest-error isqrt-error.5
  (eval '(isqrt 2/3))
  type-error)

(deftest-error isqrt-error.6
  (eval '(isqrt 3.4))
  type-error)

(deftest-error isqrt-error.7
  (eval '(isqrt #c(10 20)))
  type-error)

;;  ANSI Common Lisp
(deftest sqrt-test.1
  (sqrt 9.0)
  3.0)

(deftest-single sqrt-test.2
  (sqrt -9.0)
  0.0 3.0)

(deftest sqrt-test.3
  (isqrt 9)
  3)

(deftest sqrt-test.4
  (sqrt 12)
  3.4641016)

(deftest sqrt-test.5
  (isqrt 12)
  3)

(deftest sqrt-test.6
  (isqrt 300)
  17)

(deftest sqrt-test.7
  (isqrt 325)
  18)

(deftest sqrt-test.8
  (sqrt 25)
  5.0)

(deftest sqrt-test.9
  (isqrt 25)
  5)

(deftest-single sqrt-test.10
  (sqrt -1)
  0.0 1.0)

(deftest-single sqrt-test.11
  (sqrt #c(0 2))
  1.0 1.0)

